/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v2/ability/": {
    get: operations["ability_list"];
  };
  "/api/v2/ability/{id}/": {
    get: operations["ability_read"];
  };
  "/api/v2/berry-firmness/": {
    get: operations["berry-firmness_list"];
  };
  "/api/v2/berry-firmness/{id}/": {
    get: operations["berry-firmness_read"];
  };
  "/api/v2/berry-flavor/": {
    get: operations["berry-flavor_list"];
  };
  "/api/v2/berry-flavor/{id}/": {
    get: operations["berry-flavor_read"];
  };
  "/api/v2/berry/": {
    get: operations["berry_list"];
  };
  "/api/v2/berry/{id}/": {
    get: operations["berry_read"];
  };
  "/api/v2/characteristic/": {
    get: operations["characteristic_list"];
  };
  "/api/v2/characteristic/{id}/": {
    get: operations["characteristic_read"];
  };
  "/api/v2/contest-effect/": {
    get: operations["contest-effect_list"];
  };
  "/api/v2/contest-effect/{id}/": {
    get: operations["contest-effect_read"];
  };
  "/api/v2/contest-type/": {
    get: operations["contest-type_list"];
  };
  "/api/v2/contest-type/{id}/": {
    get: operations["contest-type_read"];
  };
  "/api/v2/egg-group/": {
    get: operations["egg-group_list"];
  };
  "/api/v2/egg-group/{id}/": {
    get: operations["egg-group_read"];
  };
  "/api/v2/encounter-condition-value/": {
    get: operations["encounter-condition-value_list"];
  };
  "/api/v2/encounter-condition-value/{id}/": {
    get: operations["encounter-condition-value_read"];
  };
  "/api/v2/encounter-condition/": {
    get: operations["encounter-condition_list"];
  };
  "/api/v2/encounter-condition/{id}/": {
    get: operations["encounter-condition_read"];
  };
  "/api/v2/encounter-method/": {
    get: operations["encounter-method_list"];
  };
  "/api/v2/encounter-method/{id}/": {
    get: operations["encounter-method_read"];
  };
  "/api/v2/evolution-chain/": {
    get: operations["evolution-chain_list"];
  };
  "/api/v2/evolution-chain/{id}/": {
    get: operations["evolution-chain_read"];
  };
  "/api/v2/evolution-trigger/": {
    get: operations["evolution-trigger_list"];
  };
  "/api/v2/evolution-trigger/{id}/": {
    get: operations["evolution-trigger_read"];
  };
  "/api/v2/gender/": {
    get: operations["gender_list"];
  };
  "/api/v2/gender/{id}/": {
    get: operations["gender_read"];
  };
  "/api/v2/generation/": {
    get: operations["generation_list"];
  };
  "/api/v2/generation/{id}/": {
    get: operations["generation_read"];
  };
  "/api/v2/growth-rate/": {
    get: operations["growth-rate_list"];
  };
  "/api/v2/growth-rate/{id}/": {
    get: operations["growth-rate_read"];
  };
  "/api/v2/item-attribute/": {
    get: operations["item-attribute_list"];
  };
  "/api/v2/item-attribute/{id}/": {
    get: operations["item-attribute_read"];
  };
  "/api/v2/item-category/": {
    get: operations["item-category_list"];
  };
  "/api/v2/item-category/{id}/": {
    get: operations["item-category_read"];
  };
  "/api/v2/item-fling-effect/": {
    get: operations["item-fling-effect_list"];
  };
  "/api/v2/item-fling-effect/{id}/": {
    get: operations["item-fling-effect_read"];
  };
  "/api/v2/item-pocket/": {
    get: operations["item-pocket_list"];
  };
  "/api/v2/item-pocket/{id}/": {
    get: operations["item-pocket_read"];
  };
  "/api/v2/item/": {
    get: operations["item_list"];
  };
  "/api/v2/item/{id}/": {
    get: operations["item_read"];
  };
  "/api/v2/language/": {
    get: operations["language_list"];
  };
  "/api/v2/language/{id}/": {
    get: operations["language_read"];
  };
  "/api/v2/location-area/": {
    get: operations["location-area_list"];
  };
  "/api/v2/location-area/{id}/": {
    get: operations["location-area_read"];
  };
  "/api/v2/location/": {
    get: operations["location_list"];
  };
  "/api/v2/location/{id}/": {
    get: operations["location_read"];
  };
  "/api/v2/machine/": {
    get: operations["machine_list"];
  };
  "/api/v2/machine/{id}/": {
    get: operations["machine_read"];
  };
  "/api/v2/move-ailment/": {
    get: operations["move-ailment_list"];
  };
  "/api/v2/move-ailment/{id}/": {
    get: operations["move-ailment_read"];
  };
  "/api/v2/move-battle-style/": {
    get: operations["move-battle-style_list"];
  };
  "/api/v2/move-battle-style/{id}/": {
    get: operations["move-battle-style_read"];
  };
  "/api/v2/move-category/": {
    get: operations["move-category_list"];
  };
  "/api/v2/move-category/{id}/": {
    get: operations["move-category_read"];
  };
  "/api/v2/move-damage-class/": {
    get: operations["move-damage-class_list"];
  };
  "/api/v2/move-damage-class/{id}/": {
    get: operations["move-damage-class_read"];
  };
  "/api/v2/move-learn-method/": {
    get: operations["move-learn-method_list"];
  };
  "/api/v2/move-learn-method/{id}/": {
    get: operations["move-learn-method_read"];
  };
  "/api/v2/move-target/": {
    get: operations["move-target_list"];
  };
  "/api/v2/move-target/{id}/": {
    get: operations["move-target_read"];
  };
  "/api/v2/move/": {
    get: operations["move_list"];
  };
  "/api/v2/move/{id}/": {
    get: operations["move_read"];
  };
  "/api/v2/nature/": {
    get: operations["nature_list"];
  };
  "/api/v2/nature/{id}/": {
    get: operations["nature_read"];
  };
  "/api/v2/pal-park-area/": {
    get: operations["pal-park-area_list"];
  };
  "/api/v2/pal-park-area/{id}/": {
    get: operations["pal-park-area_read"];
  };
  "/api/v2/pokeathlon-stat/": {
    get: operations["pokeathlon-stat_list"];
  };
  "/api/v2/pokeathlon-stat/{id}/": {
    get: operations["pokeathlon-stat_read"];
  };
  "/api/v2/pokedex/": {
    get: operations["pokedex_list"];
  };
  "/api/v2/pokedex/{id}/": {
    get: operations["pokedex_read"];
  };
  "/api/v2/pokemon-color/": {
    get: operations["pokemon-color_list"];
  };
  "/api/v2/pokemon-color/{id}/": {
    get: operations["pokemon-color_read"];
  };
  "/api/v2/pokemon-form/": {
    get: operations["pokemon-form_list"];
  };
  "/api/v2/pokemon-form/{id}/": {
    get: operations["pokemon-form_read"];
  };
  "/api/v2/pokemon-habitat/": {
    get: operations["pokemon-habitat_list"];
  };
  "/api/v2/pokemon-habitat/{id}/": {
    get: operations["pokemon-habitat_read"];
  };
  "/api/v2/pokemon-shape/": {
    get: operations["pokemon-shape_list"];
  };
  "/api/v2/pokemon-shape/{id}/": {
    get: operations["pokemon-shape_read"];
  };
  "/api/v2/pokemon-species/": {
    get: operations["pokemon-species_list"];
  };
  "/api/v2/pokemon-species/{id}/": {
    get: operations["pokemon-species_read"];
  };
  "/api/v2/pokemon/": {
    get: operations["pokemon_list"];
  };
  "/api/v2/pokemon/{id}/": {
    get: operations["pokemon_read"];
  };
  "/api/v2/region/": {
    get: operations["region_list"];
  };
  "/api/v2/region/{id}/": {
    get: operations["region_read"];
  };
  "/api/v2/stat/": {
    get: operations["stat_list"];
  };
  "/api/v2/stat/{id}/": {
    get: operations["stat_read"];
  };
  "/api/v2/super-contest-effect/": {
    get: operations["super-contest-effect_list"];
  };
  "/api/v2/super-contest-effect/{id}/": {
    get: operations["super-contest-effect_read"];
  };
  "/api/v2/type/": {
    get: operations["type_list"];
  };
  "/api/v2/type/{id}/": {
    get: operations["type_read"];
  };
  "/api/v2/version-group/": {
    get: operations["version-group_list"];
  };
  "/api/v2/version-group/{id}/": {
    get: operations["version-group_read"];
  };
  "/api/v2/version/": {
    get: operations["version_list"];
  };
  "/api/v2/version/{id}/": {
    get: operations["version_read"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Ability: {
      /**
       * Format: int32
       * @description The identifier for this ability resource.
       */
      id?: number;
      /** @description The name for this ability resource. */
      name?: string;
      /** @description Whether or not this ability originated in the main series of the video games. */
      is_main_series?: boolean;
      generation?: {
        /** @description The generation this ability originated in. */
        name?: string;
        /** @description The URL of the API endpoint for this generation. */
        url?: string;
      };
      names?: {
          /** @description The localized name for an API resource in a specific language. */
          name?: string;
          language?: {
            /** @description The name of the language. */
            name?: string;
            /** @description The URL of the API endpoint for the language. */
            url?: string;
          };
        }[];
    };
    AbilityEffectChange: {
      effect_entries: components["schemas"]["Effect"][];
      /** @description The version group in which the ability effect change occurred. */
      version_group: components["schemas"]["NamedAPIResource"];
    };
    APIResource: {
      /** @description The URL of the referenced resource. */
      url?: string;
      /** @description The name of the referenced resource. */
      name?: string;
      /**
       * Format: int32
       * @description The ID of the referenced resource.
       */
      id?: number;
    };
    Berry: {
      /** @description The identifier for this berry resource */
      id: number;
      /** @description The name for this berry resource */
      name: string;
      /** @description Time it takes the tree to grow one stage, in hours. Berry trees go through four of these growth stages before they can be picked. */
      growth_time: number;
      /** @description The maximum number of these berries that can grow on one tree in Generation IV */
      max_harvest: number;
      /** @description The power of the move "Natural Gift" when used with this Berry */
      natural_gift_power: number;
      /** @description The size of this Berry, in millimeters */
      size: number;
      /** @description The smoothness of this Berry, used in making Pok√©blocks or Poffins */
      smoothness: number;
      /** @description The speed at which this Berry dries out the soil as it grows. A higher rate means the soil dries more quickly. */
      soil_dryness: number;
      firmness: components["schemas"]["BerryFirmness"];
      /** @description A list of references to each flavor a berry can have and the potency of each of those flavors in regard to this berry. */
      flavors: components["schemas"]["BerryFlavorMap"][];
    };
    BerryFirmness: {
      /** @description The identifier for this berry firmness resource */
      id: number;
      /** @description The name for this berry firmness resource */
      name: string;
    };
    BerryFlavor: {
      /** @description The identifier for this berry flavor resource */
      id: number;
      /** @description The name for this berry flavor resource */
      name: string;
      /** @description A list of the berries with this flavor */
      berries?: components["schemas"]["BerryFlavorMap"][];
    };
    BerryFlavorMap: {
      /** @description How powerful the referenced flavor is for this berry */
      potency: number;
      flavor: components["schemas"]["BerryFlavor"];
    };
    Characteristic: {
      /** @description The identifier for this characteristic resource */
      id: number;
      /** @description The remainder of the highest stat/IV divided by 5 */
      gene_modulo: number;
      /** @description The possible values of the highest stat that would result in a Pok√©mon recieving this characteristic when divided by 5 */
      possible_values: number[];
    };
    ContestComboDetail: {
      /** @description A list of moves to use before this move. */
      use_before?: components["schemas"]["Move"][];
      /** @description A list of moves to use after this move. */
      use_after?: components["schemas"]["Move"][];
    };
    ContestComboSets: {
      normal?: components["schemas"]["ContestComboDetail"];
      super?: components["schemas"]["ContestComboDetail"];
    };
    ContestName: {
      /**
       * @description The localized name for an API resource in a specific language.
       * @example Beauty
       */
      name?: string;
    };
    ContestType: {
      /** @description The identifier for this contest type resource */
      id: number;
      /** @description The name for this contest type resource */
      name: string;
      berry_flavor: components["schemas"]["BerryFlavor"];
      /** @description The name of this contest type listed in different languages */
      names: components["schemas"]["ContestName"][];
    };
    ContestEffect: {
      /** @description The identifier for this contest effect resource */
      id: number;
      /** @description The base number of hearts the user of this move gets */
      appeal: number;
      /** @description The base number of hearts the user's opponent loses */
      jam: number;
      /** @description The flavor text of this contest effect listed in different languages */
      effect_entries: components["schemas"]["VerboseEffect"][];
      /** @description The flavor text of this contest effect listed in different languages */
      flavor_text_entries: components["schemas"]["FlavorText"][];
    };
    Description: {
      description?: string;
      language?: components["schemas"]["Language"];
    };
    /** @description An effect that occurs in a game, e.g. causing a Pok√©mon to fall asleep. */
    Effect: {
      /**
       * @description The identifier for this effect resource
       * @example 1
       */
      id?: number;
      /**
       * @description The name for this effect resource
       * @example no-type-damage
       */
      name?: string;
      /** @description The list of effect text entries */
      effect_entries?: components["schemas"]["EffectEffect"][];
      /** @description The flavor text entries that describe this effect */
      pokemon_flavor_text_entries?: components["schemas"]["EffectEffect"][];
      /** @description The species that this effect is against */
      target_species?: components["schemas"]["PokemonSpecies"];
      /** @description The list of effects that are changed by this ability */
      effect_changes?: components["schemas"]["AbilityEffectChange"][];
      /** @description The flavor text entries that describe this effect */
      flavor_text_entries?: components["schemas"]["FlavorText"][];
      /** @description The generation this effect originated in */
      generation?: components["schemas"]["Generation"];
      /** @description The machines that teach this move */
      machines?: components["schemas"]["MachineVersionDetail"][];
      /** @description Meta data about this effect */
      meta?: components["schemas"]["MoveMetaData"];
      /**
       * @description The short description of this effect listed in different languages
       * @example null
       */
      short_effect?: string;
      /**
       * @description The chance of this move having an additional effect listed in percentage
       * @example 30
       */
      effect_chance?: number;
      /** @description The list of stat changes that are caused by this effect */
      stat_changes?: components["schemas"]["MoveStatChange"][];
      /** @description The detail of how effective this move is to the super contest */
      super_contest_effect?: components["schemas"]["SuperContestEffect"];
      /** @description A detail of combos this move can be used in */
      contest_combos?: components["schemas"]["ContestComboSets"];
      /** @description The type of appeal this move gives a Pok√©mon when used in a contest */
      contest_type?: components["schemas"]["ContestType"];
    };
    /** @description The various effects of the move `effect_entries` */
    EffectEffect: {
      /** @description The localized effect text of this effect */
      effect: string;
      language: components["schemas"]["Language"];
    };
    EggGroup: {
      /** @description The identifier for this egg group resource */
      id: number;
      /** @description The name for this egg group resource */
      name: string;
      /** @description The name of this egg group listed in different languages */
      names: components["schemas"]["Name"][];
      /** @description A list of all Pokemon species that are members of this egg group */
      pokemon_species: components["schemas"]["NamedAPIResource"][];
    };
    Encounter: {
      /** @description The lowest level the Pok√©mon could be encountered at. */
      min_level: number;
      /** @description The highest level the Pok√©mon could be encountered at. */
      max_level: number;
      /** @description The condition which triggers this encounter. */
      condition_values?: components["schemas"]["EncounterConditionValue"][];
      /** @description Percent chance that this encounter will occur. */
      chance?: number;
      /** @description The method by which this encounter happens. */
      method: components["schemas"]["EncounterMethod"];
    };
    EncounterConditionValue: {
      /** @description The identifier for this encounter condition value resource */
      id: number;
      /** @description The name for this encounter condition value resource */
      name: string;
      /** @description The condition this encounter condition value pertains to */
      condition: components["schemas"]["NamedAPIResource"];
      /** @description The name of this encounter condition value listed in different languages */
      names: components["schemas"]["Name"][];
    };
    EncounterCondition: {
      /** @description The identifier for this encounter condition resource */
      id: number;
      /** @description The name for this encounter condition resource */
      name: string;
      /** @description A list of values that are used with this encounter condition */
      values: components["schemas"]["NamedAPIResource"][];
      /** @description The name of this encounter condition listed in different languages */
      names: components["schemas"]["Name"][];
    };
    EncounterMethod: {
      /** @description The identifier for this encounter method resource */
      id: number;
      /** @description The name for this encounter method resource */
      name: string;
      /** @description A good value for sorting */
      order: number;
    };
    EncounterMethodRate: {
      encounter_method?: components["schemas"]["EncounterMethod"];
      version_details?: components["schemas"]["EncounterVersionDetails"][];
    };
    /** @description Version details of an encounter. */
    EncounterVersionDetails: {
      /** @description The game version this encounter happens in. */
      version?: components["schemas"]["NamedAPIResource"];
      /** @description The total percentage of all encounter potential. */
      max_chance?: number;
      /** @description A list of encounters and their specifics. */
      encounter_details?: components["schemas"]["Encounter"][];
    };
    EvolutionChain: {
      /** @description The identifier for this evolution chain resource */
      id: number;
      /** @description The item that a baby Pok√©mon would be holding when born during a forced evolution */
      baby_trigger_item?: Record<string, never> | components["schemas"]["Item"] | null;
      chain: {
        /** @description Whether or not this is a baby Pok√©mon */
        is_baby?: boolean;
        /** @description The Pok√©mon species at this point in the evolution chain */
        species?: components["schemas"]["PokemonSpecies"];
        /** @description The chain of Pok√©mon species that forms part of this evolution chain */
        evolution_details?: (({
            item?: Record<string, never> | components["schemas"]["Item"];
            trigger?: components["schemas"]["EvolutionTrigger"];
            /** @description The required female gender of the evolving Pok√©mon species. Must be either 1 or 2, or null if the Pok√©mon species has no gender or the gender is fixed. */
            gender?: number | null;
            held_item?: Record<string, never> | components["schemas"]["Item"];
            known_move?: Record<string, never> | components["schemas"]["Move"];
            known_move_type?: Record<string, never> | components["schemas"]["Type"];
            location?: Record<string, never> | components["schemas"]["Location"];
            /** @description The minimum required level of the evolving Pok√©mon species */
            min_level?: number | null;
            /** @description The minimum required happiness of the evolving Pok√©mon species */
            min_happiness?: number | null;
            /** @description The minimum required beauty of the evolving Pok√©mon species */
            min_beauty?: number | null;
            /** @description The minimum required affection of the evolving Pok√©mon species */
            min_affection?: number | null;
            /** @description Whether or not it must be raining in the overworld to evolve into this Pok√©mon species */
            needs_overworld_rain?: boolean;
            party_species?: Record<string, never> | components["schemas"]["PokemonSpecies"];
            party_type?: Record<string, never> | components["schemas"]["Type"];
            /** @description The required relation between the Pok√©mon's Attack and Defense stats. 1 means Attack > Defense, 0 means Attack = Defense, and -1 means Attack < Defense. */
            relative_physical_stats?: number | null;
            /**
             * @description The required time of day. Day or night.
             * @enum {string}
             */
            time_of_day?: "day" | "night";
            trade_species?: Record<string, never> | components["schemas"]["PokemonSpecies"];
            /** @description Whether or not the 3DS needs to be turned upside-down as this Pok√©mon levels up. */
            turn_upside_down?: boolean;
          })[]) | null;
      };
    };
    EvolutionTrigger: {
      /** @description The identifier for this evolution trigger resource */
      id?: number;
      /** @description The name for this evolution trigger resource */
      name?: string;
    };
    FlavorText: {
      flavor_text?: string;
      language?: components["schemas"]["NamedAPIResource"];
      version?: components["schemas"]["NamedAPIResource"];
    };
    Gender: {
      /** @description The identifier for this gender resource */
      id?: number;
      /** @description The name for this gender resource */
      name?: string;
      pokemon_species_details?: {
          /** @description The chance of this Pok√©mon being female, in eighths; or -1 for genderless */
          rate?: number;
        }[];
    };
    Generation: {
      /** @description The identifier for this generation resource */
      id?: number;
      /** @description The name for this generation resource */
      name?: string;
      abilities?: {
          /** @description The name of this ability */
          name?: string;
          /** @description Whether or not this ability is a hidden one */
          is_hidden?: boolean;
          /** @description The slot this ability occupies in this Pok√©mon species */
          slot?: number;
        }[];
      names?: {
          /** @description The localized name for an API resource in a specific language */
          name?: string;
          language?: components["schemas"]["Language"];
        }[];
    };
    GenerationGameIndex: {
      /**
       * Format: int32
       * @description The internal id of an API resource within game data.
       */
      game_index?: number;
      generation?: components["schemas"]["Generation"];
    };
    Genus: {
      genus?: string;
      language?: components["schemas"]["Language"];
    };
    GrowthRate: {
      /** @description The identifier for this growth rate resource */
      id?: number;
      /** @description The name for this growth rate resource */
      name?: string;
      /** @description The formula used to calculate the rate at which the Pok√©mon species gains level */
      formula?: string;
      /** @description The description of this growth rate listed in different languages */
      descriptions?: components["schemas"]["Description"][];
    };
    ItemAttribute: {
      /** @description The identifier for this item attribute resource */
      id?: number;
      /** @description The name for this item attribute resource */
      name?: string;
      /** @description A list of items that have this attribute */
      items?: components["schemas"]["NamedAPIResource"][];
    };
    ItemCategory: {
      /** @description The identifier for this item category resource */
      id?: number;
      /** @description The name for this item category resource */
      name?: string;
      /** @description A list of items that are a part of this category */
      items?: components["schemas"]["NamedAPIResource"][];
    };
    ItemFlingEffect: {
      /** Format: int32 */
      id?: number;
      name?: string;
      effect_entries?: components["schemas"]["VerboseEffect"][];
      items?: components["schemas"]["Item"][];
    };
    ItemPocket: {
      /** Format: int32 */
      id?: number;
      name?: string;
      categories?: components["schemas"]["ItemCategory"][];
    };
    Item: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      cost?: number;
      /** Format: int32 */
      fling_power?: number;
      effect_entries?: components["schemas"]["VerboseEffect"][];
      flavor_text_entries?: components["schemas"]["FlavorText"][];
      attributes?: components["schemas"]["ItemAttribute"][];
      category?: components["schemas"]["ItemCategory"];
      fling_effect?: components["schemas"]["ItemFlingEffect"];
    };
    Language: {
      /** Format: int32 */
      id?: number;
      name?: string;
      official?: boolean;
      iso639?: string;
      iso3166?: string;
      names?: components["schemas"]["Name"][];
    };
    LocationArea: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      game_index?: number;
      encounter_method_rates?: components["schemas"]["EncounterMethodRate"][];
      location?: components["schemas"]["Location"];
      names?: components["schemas"]["Name"][];
      pokemon_encounters?: components["schemas"]["PokemonEncounter"][];
    };
    Location: {
      /** Format: int32 */
      id?: number;
      name?: string;
      region?: components["schemas"]["NamedAPIResource"];
      names?: components["schemas"]["Name"][];
      game_indices?: components["schemas"]["GenerationGameIndex"][];
      areas?: components["schemas"]["NamedAPIResource"][];
    };
    Machine: {
      /** Format: int32 */
      id?: number;
      item?: components["schemas"]["NamedAPIResource"];
      move?: components["schemas"]["NamedAPIResource"];
      version_group?: components["schemas"]["NamedAPIResource"];
    };
    MachineVersionDetail: {
      /** @description The machine that teaches a move */
      machine: components["schemas"]["APIResource"];
      /** @description The version group of this specific machine */
      version_group: components["schemas"]["APIResource"];
    };
    Move: {
      /**
       * Format: int32
       * @description The identifier for this move resource
       */
      id: number;
      /** @description The name for this move resource */
      name: string;
      /**
       * Format: int32
       * @description The percent value of how likely this move is to be successful
       */
      accuracy?: number | null;
      /**
       * Format: int32
       * @description The percent value of the additional effects this move has occuring
       */
      effect_chance?: number | null;
      /**
       * Format: int32
       * @description Power points. The number of times this move can be used
       */
      pp: number;
      /**
       * Format: int32
       * @description A value of 0 means this move goes last in the turn, and 1 means it goes first
       */
      priority: number;
      /**
       * Format: int32
       * @description The base power of this move with a value of 0 if it does not have a base power
       */
      power?: number | null;
      contest_combos?: components["schemas"]["ContestComboSets"];
      contest_type?: {
        name: string;
        url: string;
      };
      contest_effect?: {
        url: string;
      };
      damage_class?: {
        name: string;
        url: string;
      };
      effect_entries?: components["schemas"]["VerboseEffect"][];
      effect_changes?: components["schemas"]["AbilityEffectChange"][];
      generation: {
        name: string;
        url: string;
      };
      meta?: components["schemas"]["MoveMetaData"];
      names?: components["schemas"]["Name"][];
      past_values?: components["schemas"]["PastMoveStatValues"][];
      stat_changes?: components["schemas"]["MoveStatChange"][];
      super_contest_effect?: {
        url: string;
      };
      target: {
        name: string;
        url: string;
      };
      type: {
        name: string;
        url: string;
      };
    };
    MoveAilment: {
      /** @example 1 */
      id: number;
      /** @example paralysis */
      name: string;
      moves: components["schemas"]["Move"][];
    };
    MoveBattleStyle: {
      /** @example 1 */
      id: number;
      /** @example attack */
      name: string;
    };
    MoveBattleStylePreference: {
      /** @description Chance of using the move, in percent, if HP is under one half of maximum HP. */
      low_hp_preference: number;
      /** @description Chance of using the move, in percent, if HP is over one half of maximum HP. */
      high_hp_preference: number;
      move_battle_style: components["schemas"]["NamedAPIResource"];
    };
    MoveCategory: {
      /** @example 1 */
      id: number;
      /** @example ailment */
      name: string;
    };
    MoveDamageClass: {
      /** Format: int32 */
      id: number;
      name: string;
      descriptions: components["schemas"]["Description"][];
    };
    /** @description Methods by which Pok√©mon can learn moves. */
    MoveLearnMethod: {
      /**
       * @description The identifier for this move learn method resource.
       * @example 1
       */
      id: number;
      /**
       * @description The name for this move learn method resource.
       * @example level-up
       */
      name: string;
      /** @description The description of this move learn method listed in different languages. */
      descriptions?: components["schemas"]["Description"][];
      /** @description The name of this move learn method listed in different languages. */
      names?: components["schemas"]["Name"][];
    };
    MoveMetaData: {
      /** @description The type of status effect caused by the move if any. */
      ailment: components["schemas"]["NamedAPIResource"];
      /** @description The category of move this move falls under, e.g. damage or ailment. */
      category: components["schemas"]["NamedAPIResource"];
      /** @description The minimum number of times this move hits. Null if it always only hits once. */
      min_hits?: number | null;
      /** @description The maximum number of times this move hits. Null if it always only hits once. */
      max_hits?: number | null;
      /** @description The minimum number of turns this move continues to take effect. Null if it always only lasts one turn. */
      min_turns?: number | null;
      /** @description The maximum number of turns this move continues to take effect. Null if it always only lasts one turn. */
      max_turns?: number | null;
      /** @description The amount of hp gained by the attacking Pokemon when it uses this move. */
      drain?: number | null;
      /** @description The amount of hp gained by the target Pokemon when it receives this move. */
      healing?: number | null;
      /** @description Critical hit rate bonus. */
      crit_rate?: number | null;
      /** @description The chance of the target being inflicted with the status condition ailment. */
      ailment_chance?: number | null;
      /** @description The chance of the target flinching when hit by this move. */
      flinch_chance?: number | null;
      /** @description The chance of the attacking Pokemon lowering the target's stat. */
      stat_chance?: number | null;
    };
    MoveStatAffect: {
      /**
       * @description The amount of change to the referenced stat.
       * @example -1
       */
      change: number;
      /** @description The move causing the change. */
      move: components["schemas"]["NamedAPIResource"];
    };
    MoveStatAffectSets: {
      increase: components["schemas"]["MoveStatAffect"][];
      decrease: components["schemas"]["MoveStatAffect"][];
    };
    MoveStatChange: {
      /** @description The amount of change to the referenced stat. */
      change: number;
      stat: components["schemas"]["NamedAPIResource"];
    };
    /** @description Targets moves can be directed at during battle. Targets can be Pok√©mon, adjacent positions, all opponents, etc. */
    MoveTarget: {
      /**
       * @description The identifier for this move target resource
       * @example 1
       */
      id: number;
      /**
       * @description The name for this move target resource
       * @example specific-move
       */
      name: string;
      /** @description The description of this move target listed in different languages */
      descriptions: components["schemas"]["Description"][];
    };
    NamedAPIResource: {
      name: string;
      /** Format: uri */
      url: string;
    };
    Name: {
      language?: components["schemas"]["NamedAPIResource"];
      name?: string;
    };
    Nature: {
      /** @example 5 */
      id: number;
      /** @example Hardy */
      name: string;
      /** @example Attack */
      decreased_stat: string;
      /** @example Attack */
      increased_stat: string;
      /** @example Spicy */
      hates_flavor: string;
      /** @example Spicy */
      likes_flavor: string;
      pokeathlon_stat_changes?: components["schemas"]["NatureStatChange"][];
      move_battle_style_preferences?: components["schemas"]["MoveBattleStylePreference"][];
    };
    NaturePokeathlonStatAffectSets: {
      increase: components["schemas"]["PokeathlonStatAffect"][];
      decrease: components["schemas"]["PokeathlonStatAffect"][];
    };
    NatureStatAffect: {
      increase?: components["schemas"]["Nature"][];
      decrease?: components["schemas"]["Nature"][];
    };
    NatureStatAffectSets: {
      increase: components["schemas"]["NatureStatAffect"][];
      decrease: components["schemas"]["NatureStatAffect"][];
    };
    NatureStatChange: {
      max_change?: number;
      pokeathlon_stat?: components["schemas"]["PokeathlonStatName"];
    };
    PokeAthlon: {
      /** @example 1 */
      id: number;
      /** @example Sprint */
      name: string;
      names: components["schemas"]["PokeathlonStatName"][];
    };
    PokeathlonStatName: {
      name?: string;
      names?: components["schemas"]["Name"][];
    };
    Pokedex: {
      /** @example 2 */
      id: number;
      /** @example National */
      name: string;
      /** @example true */
      is_main_series: boolean;
      descriptions: components["schemas"]["Description"][];
      pokemon_entries: components["schemas"]["PokemonEntry"][];
      region: components["schemas"]["NamedAPIResource"];
    };
    PalParkArea: {
      /** @description The identifier for this pal park area resource */
      id: number;
      /** @description The name for this pal park area resource */
      name: string;
    };
    /** @description Areas where the Pok√©mon species can be encountered in pal park. */
    PalParkEncounterArea: {
      /** @description The base score given to the player when the referenced Pokemon is caught during a pal park run. */
      base_score?: number;
      /** @description The base rate for encountering the referenced Pokemon in this pal park area. */
      rate?: number;
      area?: components["schemas"]["NamedAPIResource"];
    };
    PastMoveStatValues: {
      /** @description The percent value of how likely this move is to be successful. */
      accuracy: number;
      /** @description The percent value of effect occurring. */
      effect_chance?: number;
      /** @description The base power of this move with a value of 0 if it does not have a base power. */
      power: number;
      /** @description The power points this move has left. */
      pp: number;
      /** @description The list of previous effects this move has had across version groups. */
      effect_entries?: {
          effect?: components["schemas"]["VerboseEffect"];
          version_group?: components["schemas"]["NamedAPIResource"];
        }[];
      type?: components["schemas"]["Type"];
    };
    PokeathlonStat: {
      /**
       * @description The identifier for this Pok√©athlon stat resource
       * @example 1
       */
      id: number;
      /**
       * @description The name for this Pok√©athlon stat resource
       * @example speed
       */
      name: string;
      /** @description The name of this Pok√©athlon stat listed in different languages */
      names: components["schemas"]["Name"][];
      /** @description A detail of natures which affect this Pok√©athlon stat positively or negatively */
      affecting_natures: {
        /** @description A list of natures that positively affect this Pok√©athlon stat */
        increase?: components["schemas"]["NaturePokeathlonStatAffectSets"][];
        /** @description A list of natures that negatively affect this Pok√©athlon stat */
        decrease?: components["schemas"]["NaturePokeathlonStatAffectSets"][];
      };
    };
    PokeathlonStatAffect: {
      /** @description The maximum amount of change to the referenced Pok√©athlon stat. */
      max_change: number;
      /** @description The nature causing the change. */
      nature: components["schemas"]["Nature"];
    };
    PokemonAbility: {
      is_hidden?: boolean;
      slot?: number;
      ability?: components["schemas"]["Ability"];
    };
    PokemonColor: {
      /**
       * @description The identifier for this Pokemon color resource
       * @example 1
       */
      id?: number;
      /**
       * @description The name for this Pokemon color resource
       * @example red
       */
      name?: string;
    };
    PokemonEntry: {
      /**
       * @description The index number within the Pok√©dex.
       * @example 6
       */
      entry_number?: number;
      /** @description The Pok√©mon species being encountered. */
      pokemon_species?: components["schemas"]["NamedAPIResource"];
    };
    PokemonForm: {
      /**
       * @description The identifier for this Pokemon form resource
       * @example 1
       */
      id?: number;
      /**
       * @description The name for this Pokemon form resource
       * @example bulbasaur
       */
      name?: string;
    };
    PokemonHabitat: {
      /**
       * @description The identifier for this Pokemon habitat resource
       * @example 1
       */
      id?: number;
      /**
       * @description The name for this Pokemon habitat resource
       * @example cave
       */
      name?: string;
    };
    PokemonHeldItem: {
      item?: components["schemas"]["Item"];
      version_details?: {
          rarity?: number;
          version?: components["schemas"]["Version"];
        }[];
    };
    PokemonMove: {
      /** @description The move the Pok√©mon can learn */
      move?: components["schemas"]["NamedAPIResource"];
      /** @description A list of details showing how the Pok√©mon can learn the move */
      version_group_details?: {
          /**
           * @description The minimum level to learn the move
           * @example 0
           */
          level_learned_at: number;
          /** @description The method by which the Pok√©mon learns the move */
          move_learn_method: components["schemas"]["NamedAPIResource"];
          /** @description The version group in which the move can be learned */
          version_group: components["schemas"]["NamedAPIResource"];
        }[];
    };
    PokemonShape: {
      /**
       * @description The identifier for this Pokemon shape resource
       * @example 1
       */
      id?: number;
      /**
       * @description The name for this Pokemon shape resource
       * @example ball
       */
      name?: string;
    };
    PokemonSpecies: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      order?: number;
      /** Format: int32 */
      gender_rate?: number;
      /** Format: int32 */
      capture_rate?: number;
      /** Format: int32 */
      base_happiness?: number;
      is_baby?: boolean;
      /** Format: int32 */
      hatch_counter?: number;
      has_gender_differences?: boolean;
      forms_switchable?: boolean;
      growth_rate?: components["schemas"]["GrowthRate"];
      pokedex_numbers?: components["schemas"]["PokemonSpeciesDexEntry"][];
      egg_groups?: components["schemas"]["EggGroup"][];
      color?: components["schemas"]["PokemonColor"];
      shape?: components["schemas"]["PokemonShape"];
      evolves_from_species?: components["schemas"]["PokemonSpecies"];
      evolution_chain?: components["schemas"]["EvolutionChain"];
      habitat?: components["schemas"]["PokemonHabitat"];
      generation?: components["schemas"]["Generation"];
      names?: components["schemas"]["Name"][];
      pal_park_encounters?: components["schemas"]["PalParkEncounterArea"][];
      flavor_text_entries?: components["schemas"]["FlavorText"][];
      form_descriptions?: components["schemas"]["Description"][];
      genera?: components["schemas"]["Genus"][];
      varieties?: components["schemas"]["PokemonSpeciesVariety"][];
    };
    /** @description An entry of a Pokemon species seen in the Pokedex. */
    PokemonSpeciesDexEntry: {
      /** @description The index number of the Pokedex entry. */
      entry_number?: number;
      pokedex?: components["schemas"]["NamedAPIResource"];
    };
    PokemonSpeciesVariety: {
      /**
       * @description Whether this is the default "natural" variety of this species. Note that "default" is
       * subjective and that it may not match the Pok√©mon games' official status.
       *
       * @example true
       */
      is_default?: boolean;
      pokemon?: components["schemas"]["Pokemon"];
      /**
       * @description The name of this Pok√©mon species variety
       * @example Bulbasaur
       */
      name?: string;
    };
    PokemonSprites: {
      /**
       * Format: uri
       * @description The default depiction of this Pok√©mon from the front in battle.
       */
      front_default?: string;
      /**
       * Format: uri
       * @description The shiny depiction of this Pok√©mon from the front in battle, for female gendered Pok√©mon.
       */
      front_female?: string;
      /**
       * Format: uri
       * @description The shiny depiction of this Pok√©mon from the front in battle.
       */
      front_shiny?: string;
      /**
       * Format: uri
       * @description The shiny depiction of this Pok√©mon from the front in battle, for female gendered Pok√©mon.
       */
      front_shiny_female?: string;
      /**
       * Format: uri
       * @description The default depiction of this Pok√©mon from the back in battle.
       */
      back_default?: string;
      /**
       * Format: uri
       * @description The shiny depiction of this Pok√©mon from the back in battle, for female gendered Pok√©mon.
       */
      back_female?: string;
      /**
       * Format: uri
       * @description The shiny depiction of this Pok√©mon from the back in battle.
       */
      back_shiny?: string;
      /**
       * Format: uri
       * @description The shiny depiction of this Pok√©mon from the back in battle, for female gendered Pok√©mon.
       */
      back_shiny_female?: string;
    };
    PokemonStat: {
      /** @description The stat the Pok√©mon has. */
      stat?: components["schemas"]["NamedAPIResource"];
      /** @description The effort points (EV) the Pok√©mon has in the stat. */
      effort?: number;
      /** @description The base value of the stat. */
      base_stat?: number;
    };
    PokemonType: {
      /**
       * Format: int32
       * @description The order the Pok√©mon's types are listed in.
       */
      slot?: number;
      /** @description The type the Pok√©mon has. */
      type?: components["schemas"]["NamedAPIResource"];
    };
    /** @description Encounters Pokemon that can be encountered in the game and the version groups in which they can be encountered. */
    PokemonEncounter: {
      pokemon?: components["schemas"]["NamedAPIResource"];
      version_details?: components["schemas"]["EncounterVersionDetails"][];
    };
    Pokemon: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int32 */
      base_experience: number;
      /** Format: int32 */
      height: number;
      is_default: boolean;
      /** Format: int32 */
      order: number;
      /** Format: int32 */
      weight: number;
      abilities: components["schemas"]["PokemonAbility"][];
      forms: components["schemas"]["PokemonForm"][];
      game_indices: components["schemas"]["VersionGameIndex"][];
      held_items: components["schemas"]["PokemonHeldItem"][];
      location_area_encounters: string;
      moves: components["schemas"]["PokemonMove"][];
      sprites: components["schemas"]["PokemonSprites"];
      species: components["schemas"]["NamedAPIResource"];
      stats: components["schemas"]["PokemonStat"][];
      types: components["schemas"]["PokemonType"][];
    };
    Region: {
      /** Format: int32 */
      id: number;
      locations: components["schemas"]["NamedAPIResource"][];
      name: string;
      names: components["schemas"]["Name"][];
      main_generation: components["schemas"]["NamedAPIResource"];
      pokedexes: components["schemas"]["NamedAPIResource"][];
      version_groups: components["schemas"]["NamedAPIResource"][];
    };
    Stat: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int32 */
      game_index: number;
      is_battle_only?: boolean;
      affecting_moves?: components["schemas"]["MoveStatAffectSets"];
      affecting_natures?: components["schemas"]["NatureStatAffectSets"];
    };
    SuperContestEffect: {
      /** Format: int32 */
      id: number;
      /** Format: int32 */
      appeal: number;
      flavor_text_entries: components["schemas"]["FlavorText"][];
      moves: components["schemas"]["NamedAPIResource"][];
    };
    VersionGroup: {
      /** Format: int32 */
      id: number;
      name: string;
      /** Format: int32 */
      order: number;
      generation: components["schemas"]["NamedAPIResource"];
      move_learn_methods: components["schemas"]["NamedAPIResource"][];
      pokedexes: components["schemas"]["NamedAPIResource"][];
      regions: components["schemas"]["NamedAPIResource"][];
      versions: components["schemas"]["NamedAPIResource"][];
    };
    Version: {
      /** Format: int32 */
      id: number;
      name: string;
      names: components["schemas"]["Name"][];
      version_group: components["schemas"]["NamedAPIResource"];
    };
    Type: {
      /**
       * Format: int32
       * @description The identifier for this type resource.
       */
      id?: number;
      /** @description The name for this type resource. */
      name?: string;
      damage_relations?: {
        double_damage_from?: {
            /** @description The name of the related type. */
            name?: string;
            /** @description The URL of the API endpoint for the related type. */
            url?: string;
          }[];
        double_damage_to?: {
            /** @description The name of the related type. */
            name?: string;
            /** @description The URL of the API endpoint for the related type. */
            url?: string;
          }[];
        half_damage_from?: {
            /** @description The name of the related type. */
            name?: string;
            /** @description The URL of the API endpoint for the related type. */
            url?: string;
          }[];
        half_damage_to?: {
            /** @description The name of the related type. */
            name?: string;
            /** @description The URL of the API endpoint for the related type. */
            url?: string;
          }[];
        no_damage_from?: {
            /** @description The name of the related type. */
            name?: string;
            /** @description The URL of the API endpoint for the related type. */
            url?: string;
          }[];
        no_damage_to?: {
            /** @description The name of the related type. */
            name?: string;
            /** @description The URL of the API endpoint for the related type. */
            url?: string;
          }[];
      };
      game_indices?: {
          /**
           * Format: int32
           * @description The internal id of an api resource within game data.
           */
          game_index?: number;
          generation?: {
            /** @description The generation this game index is related to. */
            name?: string;
            /** @description The URL of the API endpoint for the generation. */
            url?: string;
          };
        }[];
      generation?: {
        /** @description The generation this type originated in. */
        name?: string;
        /** @description The URL of the API endpoint for this generation. */
        url?: string;
      };
      move_damage_class?: {
        /** @description The name of this move damage class. */
        name?: string;
        /** @description The URL of the API endpoint for this move damage class. */
        url?: string;
      };
      names?: {
          /** @description The localized name for an API resource in a specific language. */
          name?: string;
          language?: {
            /** @description The name of the language. */
            name?: string;
            /** @description The URL of the API endpoint for the language. */
            url?: string;
          };
        }[];
      pokemon?: {
          slot?: number;
        }[];
    };
    VerboseEffect: {
      /**
       * @description The localized effect text for an API resource in a specific language.
       * @example Raises the user's Defense by 1 stage.
       */
      effect?: string;
    };
    VersionGameIndex: {
      /**
       * @description The internal id of the game used in generation VI and VII to identify different
       * versions of the same Pok√©mon species.
       *
       * @example 12
       */
      game_index?: number;
      /** @description The version relevent to this game index */
      version?: components["schemas"]["NamedAPIResource"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  ability_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description A list of abilities */
      200: {
        content: {
          "application/json": {
            /** @description The total number of abilities available */
            count?: number;
            /** @description The URL for the next page of abilities (null if none) */
            next?: string;
            /** @description The URL for the previous page of abilities (null if none) */
            previous?: string;
            results?: components["schemas"]["Ability"][];
          };
        };
      };
    };
  };
  ability_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Ability"];
        };
      };
    };
  };
  "berry-firmness_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of berry firmnesses available from this API.
             * @example 5
             */
            count?: number;
            /** @description The URL for the next page of results, or null if there are no more results. */
            next?: string | null;
            /** @description The URL for the previous page of results, or null if this is the first page. */
            previous?: string | null;
            results?: components["schemas"]["BerryFirmness"][];
          };
        };
      };
    };
  };
  "berry-firmness_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["BerryFirmness"];
        };
      };
    };
  };
  "berry-flavor_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of berry flavors
             * @example 5
             */
            count?: number;
            /**
             * @description The URL to the next page of berry flavors (if any)
             * @example https://pokeapi.co/api/v2/berry-flavor?offset=5&limit=5
             */
            next?: string;
            /**
             * @description The URL to the previous page of berry flavors (if any)
             * @example null
             */
            previous?: string;
            results?: components["schemas"]["BerryFlavor"][];
          };
        };
      };
    };
  };
  "berry-flavor_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["BerryFlavor"];
        };
      };
    };
  };
  berry_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Berry"][];
        };
      };
    };
  };
  berry_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Berry"];
        };
      };
    };
  };
  characteristic_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response with a list of characteristics */
      200: {
        content: {
          "application/json": components["schemas"]["Characteristic"][];
        };
      };
    };
  };
  characteristic_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Characteristic"];
        };
      };
    };
  };
  "contest-effect_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description A list of contest effects */
      200: {
        content: {
          "application/json": {
            /** @description The total number of contest effects */
            count?: number;
            /** @description The URL to get the next page of contest effects (if it exists) */
            next?: string | null;
            /** @description The URL to get the previous page of contest effects (if it exists) */
            previous?: string | null;
            results?: components["schemas"]["ContestEffect"][];
          };
        };
      };
    };
  };
  "contest-effect_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ContestEffect"];
        };
      };
    };
  };
  "contest-type_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response containing a list of contest types */
      200: {
        content: {
          "application/json": {
            /** @description The total number of contest types returned */
            count?: number;
            /** @description URL to the next page of contest types, if any */
            next?: string | null;
            /** @description URL to the previous page of contest types, if any */
            previous?: string | null;
            results?: components["schemas"]["ContestType"][];
          };
        };
      };
    };
  };
  "contest-type_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ContestType"];
        };
      };
    };
  };
  "egg-group_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EggGroup"][];
        };
      };
    };
  };
  "egg-group_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["EggGroup"];
        };
      };
    };
  };
  "encounter-condition-value_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description Successful response containing a list of encounter condition values */
      200: {
        content: {
          "application/json": components["schemas"]["EncounterConditionValue"][];
        };
      };
    };
  };
  "encounter-condition-value_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["EncounterConditionValue"];
        };
      };
    };
  };
  "encounter-condition_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of encounter conditions.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of encounter conditions.
             * @example https://pokeapi.co/api/v2/encounter-condition/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of encounter conditions. */
            previous?: string | null;
            results?: components["schemas"]["EncounterCondition"][];
          };
        };
      };
    };
  };
  "encounter-condition_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["EncounterCondition"];
        };
      };
    };
  };
  "encounter-method_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of encounter methods.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of encounter methods.
             * @example https://pokeapi.co/api/v2/encounter-method/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of encounter methods. */
            previous?: string | null;
            results?: components["schemas"]["EncounterMethod"][];
          };
        };
      };
    };
  };
  "encounter-method_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["EncounterMethod"];
        };
      };
    };
  };
  "evolution-chain_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of evolution chains.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of evolution chains.
             * @example https://pokeapi.co/api/v2/evolution-chain/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of evolution chains. */
            previous?: string | null;
            results?: components["schemas"]["EvolutionChain"][];
          };
        };
      };
    };
  };
  "evolution-chain_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["EvolutionChain"];
        };
      };
    };
  };
  "evolution-trigger_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of evolution triggers.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of evolution triggers.
             * @example https://pokeapi.co/api/v2/evolution-trigger/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of evolution triggers. */
            previous?: string | null;
            results?: components["schemas"]["EvolutionTrigger"][];
          };
        };
      };
    };
  };
  "evolution-trigger_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["EvolutionTrigger"];
        };
      };
    };
  };
  gender_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of genders.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of genders.
             * @example https://pokeapi.co/api/v2/gender/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of genders. */
            previous?: string | null;
            results?: components["schemas"]["Gender"][];
          };
        };
      };
    };
  };
  gender_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Gender"];
        };
      };
    };
  };
  generation_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of generations.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of generations.
             * @example https://pokeapi.co/api/v2/generation/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of generations. */
            previous?: string | null;
            results?: components["schemas"]["Generation"][];
          };
        };
      };
    };
  };
  generation_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Generation"];
        };
      };
    };
  };
  "growth-rate_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of growth rates.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of growth rates.
             * @example https://pokeapi.co/api/v2/growth-rate/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of growth rates. */
            previous?: string | null;
            results?: components["schemas"]["GrowthRate"][];
          };
        };
      };
    };
  };
  "growth-rate_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["GrowthRate"];
        };
      };
    };
  };
  "item-attribute_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of item attributes.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of item attributes.
             * @example https://pokeapi.co/api/v2/item-attribute/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of item attributes. */
            previous?: string | null;
            results?: components["schemas"]["ItemAttribute"][];
          };
        };
      };
    };
  };
  "item-attribute_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ItemAttribute"];
        };
      };
    };
  };
  "item-category_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of item categories.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of item categories.
             * @example https://pokeapi.co/api/v2/item-category/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of item categories. */
            previous?: string | null;
            results?: components["schemas"]["ItemCategory"][];
          };
        };
      };
    };
  };
  "item-category_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ItemCategory"];
        };
      };
    };
  };
  "item-fling-effect_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of item fling effects.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of item fling effects.
             * @example https://pokeapi.co/api/v2/item-fling-effect/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of item fling effects. */
            previous?: string | null;
            results?: components["schemas"]["ItemFlingEffect"][];
          };
        };
      };
    };
  };
  "item-fling-effect_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ItemFlingEffect"];
        };
      };
    };
  };
  "item-pocket_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of item pockets.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of item pockets.
             * @example https://pokeapi.co/api/v2/item-pocket/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of item pockets. */
            previous?: string | null;
            results?: components["schemas"]["ItemPocket"][];
          };
        };
      };
    };
  };
  "item-pocket_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["ItemPocket"];
        };
      };
    };
  };
  item_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of items.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of items.
             * @example https://pokeapi.co/api/v2/item/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of items. */
            previous?: string | null;
            results?: components["schemas"]["Item"][];
          };
        };
      };
    };
  };
  item_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Item"];
        };
      };
    };
  };
  language_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of languages.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of languages.
             * @example https://pokeapi.co/api/v2/language/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of languages. */
            previous?: string | null;
            results?: components["schemas"]["Language"][];
          };
        };
      };
    };
  };
  language_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Language"];
        };
      };
    };
  };
  "location-area_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of location areas.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of location areas.
             * @example https://pokeapi.co/api/v2/location-area/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of location areas. */
            previous?: string | null;
            results?: components["schemas"]["LocationArea"][];
          };
        };
      };
    };
  };
  "location-area_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["LocationArea"];
        };
      };
    };
  };
  location_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of locations.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of locations.
             * @example https://pokeapi.co/api/v2/location/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of locations. */
            previous?: string | null;
            results?: components["schemas"]["Location"][];
          };
        };
      };
    };
  };
  location_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
  machine_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of machines.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of machines.
             * @example https://pokeapi.co/api/v2/machine/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of machines. */
            previous?: string | null;
            results?: components["schemas"]["Machine"][];
          };
        };
      };
    };
  };
  machine_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Machine"];
        };
      };
    };
  };
  "move-ailment_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of move ailments.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of move ailments.
             * @example https://pokeapi.co/api/v2/move-ailment/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of move ailments. */
            previous?: string | null;
            results?: components["schemas"]["MoveAilment"][];
          };
        };
      };
    };
  };
  "move-ailment_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["MoveAilment"];
        };
      };
    };
  };
  "move-battle-style_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of move battle styles.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of move battle styles.
             * @example https://pokeapi.co/api/v2/move-battle-style/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of move battle styles. */
            previous?: string | null;
            results?: components["schemas"]["MoveBattleStyle"][];
          };
        };
      };
    };
  };
  "move-battle-style_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["MoveBattleStyle"];
        };
      };
    };
  };
  "move-category_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of move categories.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of move categories.
             * @example https://pokeapi.co/api/v2/move-category/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of move categories. */
            previous?: string | null;
            results?: components["schemas"]["MoveCategory"][];
          };
        };
      };
    };
  };
  "move-category_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["MoveCategory"];
        };
      };
    };
  };
  "move-damage-class_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of move damage classes.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of move damage classes.
             * @example https://pokeapi.co/api/v2/move-damage-class/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of move damage classes. */
            previous?: string | null;
            results?: components["schemas"]["MoveDamageClass"][];
          };
        };
      };
    };
  };
  "move-damage-class_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["MoveDamageClass"];
        };
      };
    };
  };
  "move-learn-method_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of move learn methods.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of move learn methods.
             * @example https://pokeapi.co/api/v2/move-learn-method/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of move learn methods. */
            previous?: string | null;
            results?: components["schemas"]["MoveLearnMethod"][];
          };
        };
      };
    };
  };
  "move-learn-method_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["MoveLearnMethod"];
        };
      };
    };
  };
  "move-target_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of move targets.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of move targets.
             * @example https://pokeapi.co/api/v2/move-target/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of move targets. */
            previous?: string | null;
            results?: components["schemas"]["MoveTarget"][];
          };
        };
      };
    };
  };
  "move-target_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["MoveTarget"];
        };
      };
    };
  };
  move_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of moves.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of moves.
             * @example https://pokeapi.co/api/v2/move/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of moves. */
            previous?: string | null;
            results?: components["schemas"]["Move"][];
          };
        };
      };
    };
  };
  move_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Move"];
        };
      };
    };
  };
  nature_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of natures.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of natures.
             * @example https://pokeapi.co/api/v2/nature/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of natures. */
            previous?: string | null;
            results?: components["schemas"]["Nature"][];
          };
        };
      };
    };
  };
  nature_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Nature"];
        };
      };
    };
  };
  "pal-park-area_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pal park areas.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pal park areas.
             * @example https://pokeapi.co/api/v2/pal-park-area/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pal park areas. */
            previous?: string | null;
            results?: components["schemas"]["PalParkArea"][];
          };
        };
      };
    };
  };
  "pal-park-area_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["PalParkArea"];
        };
      };
    };
  };
  "pokeathlon-stat_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokeathlon stats.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokeathlon stats.
             * @example https://pokeapi.co/api/v2/pokeathlon-stat/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokeathlon stat. */
            previous?: string | null;
            results?: components["schemas"]["PokeathlonStat"][];
          };
        };
      };
    };
  };
  "pokeathlon-stat_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["PokeathlonStat"];
        };
      };
    };
  };
  pokedex_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokedexes.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokedexes.
             * @example https://pokeapi.co/api/v2/pokedex/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokedexes. */
            previous?: string | null;
            results?: components["schemas"]["Pokedex"][];
          };
        };
      };
    };
  };
  pokedex_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Pokedex"];
        };
      };
    };
  };
  "pokemon-color_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokemon colors.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokemon colors.
             * @example https://pokeapi.co/api/v2/pokemon-color/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokemon colors. */
            previous?: string | null;
            results?: components["schemas"]["PokemonColor"][];
          };
        };
      };
    };
  };
  "pokemon-color_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["PokemonColor"];
        };
      };
    };
  };
  "pokemon-form_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokemon forms.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokemon forms.
             * @example https://pokeapi.co/api/v2/pokemon-form/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokemon forms. */
            previous?: string | null;
            results?: components["schemas"]["PokemonForm"][];
          };
        };
      };
    };
  };
  "pokemon-form_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["PokemonForm"];
        };
      };
    };
  };
  "pokemon-habitat_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokemon habitats.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokemon habitats.
             * @example https://pokeapi.co/api/v2/language/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokemon habitats. */
            previous?: string | null;
            results?: components["schemas"]["PokemonHabitat"][];
          };
        };
      };
    };
  };
  "pokemon-habitat_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["PokemonHabitat"];
        };
      };
    };
  };
  "pokemon-shape_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokemon shapes.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokemon shapes.
             * @example https://pokeapi.co/api/v2/pokemon-shape/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokemon shapes. */
            previous?: string | null;
            results?: components["schemas"]["PokemonShape"][];
          };
        };
      };
    };
  };
  "pokemon-shape_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["PokemonShape"];
        };
      };
    };
  };
  "pokemon-species_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokemon species list.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokemon species list.
             * @example https://pokeapi.co/api/v2/pokemon-species/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokemon species list. */
            previous?: string | null;
            results?: components["schemas"]["PokemonSpecies"][];
          };
        };
      };
    };
  };
  "pokemon-species_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["PokemonSpecies"];
        };
      };
    };
  };
  pokemon_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of pokemons.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of pokemons.
             * @example https://pokeapi.co/api/v2/pokemon/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of pokemons. */
            previous?: string | null;
            results?: components["schemas"]["Pokemon"][];
          };
        };
      };
    };
  };
  pokemon_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Pokemon"];
        };
      };
    };
  };
  region_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of regions.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of regions.
             * @example https://pokeapi.co/api/v2/region/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of regions. */
            previous?: string | null;
            results?: components["schemas"]["Region"][];
          };
        };
      };
    };
  };
  region_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Region"];
        };
      };
    };
  };
  stat_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of stats.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of stats.
             * @example https://pokeapi.co/api/v2/stat/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of stats. */
            previous?: string | null;
            results?: components["schemas"]["Stat"][];
          };
        };
      };
    };
  };
  stat_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Stat"];
        };
      };
    };
  };
  "super-contest-effect_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of super contest effects.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of super contest effects.
             * @example https://pokeapi.co/api/v2/super-contest-effect/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of super contest effects. */
            previous?: string | null;
            results?: components["schemas"]["SuperContestEffect"][];
          };
        };
      };
    };
  };
  "super-contest-effect_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["SuperContestEffect"];
        };
      };
    };
  };
  type_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of types.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of types.
             * @example https://pokeapi.co/api/v2/type/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of types. */
            previous?: string | null;
            results?: components["schemas"]["Type"][];
          };
        };
      };
    };
  };
  type_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Type"];
        };
      };
    };
  };
  "version-group_list": {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of version groups.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of version groups.
             * @example https://pokeapi.co/api/v2/version-group/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of version groups. */
            previous?: string | null;
            results?: components["schemas"]["VersionGroup"][];
          };
        };
      };
    };
  };
  "version-group_read": {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["VersionGroup"];
        };
      };
    };
  };
  version_list: {
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": {
            /**
             * @description The total number of versions.
             * @example 3
             */
            count?: number;
            /**
             * @description URL to retrieve the next page of versions.
             * @example https://pokeapi.co/api/v2/version/?offset=20&limit=20
             */
            next?: string | null;
            /** @description URL to retrieve the previous page of versions. */
            previous?: string | null;
            results?: components["schemas"]["Version"][];
          };
        };
      };
    };
  };
  version_read: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Successful response */
      200: {
        content: {
          "application/json": components["schemas"]["Version"];
        };
      };
    };
  };
}
